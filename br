grant_type=client_credentials&client_id={{CLIENT_ID}}&client_secret={{CLIENT_SECRET}}&scope={{SCOPE}}

const response = JSON.parse(bruno.response.body);

if (response.access_token) {
  bruno.setEnvironmentVariable("BEARER_TOKEN", response.access_token);

  const expiresIn = response.expires_in || 3600; // default to 1 hour if not provided
  const expiryTime = Date.now() + expiresIn * 1000;
  bruno.setEnvironmentVariable("TOKEN_EXPIRY", expiryTime.toString());

  console.log(`Token stored, expires at ${new Date(expiryTime).toISOString()}`);
} else {
  throw new Error("Token fetch failed: No access_token found in response.");
}



(async () => {
  const now = Date.now();
  const tokenExpiry = Number(bruno.getEnvironmentVariable("TOKEN_EXPIRY") || 0);

  if (now < tokenExpiry) {
    console.log("Valid token exists. Skipping fetch.");
    return;
  }

  console.log("Token expired or missing. Fetching new token...");

  await bruno.runRequest("Fetch Token");
})();