(async () => {
  const now = Date.now();
  const tokenExpiry = Number(bruno.getEnvironmentVariable("TOKEN_EXPIRY") || 0);

  if (now < tokenExpiry) {
    console.log("Using cached token.");
    return;
  }

  const tokenUrl = bruno.getEnvironmentVariable("TOKEN_URL");
  const clientId = bruno.getEnvironmentVariable("CLIENT_ID");
  const clientSecret = bruno.getEnvironmentVariable("CLIENT_SECRET");

  const body = `grant_type=client_credentials&client_id=${encodeURIComponent(clientId)}&client_secret=${encodeURIComponent(clientSecret)}`;

  try {
    const response = await bruno.request({
      url: tokenUrl,
      method: "POST",
      headers: {
        "Content-Type": "application/x-www-form-urlencoded",
      },
      body: body,
    });

    if (response.status === 200) {
      const { access_token, expires_in } = JSON.parse(response.body);
      bruno.setEnvironmentVariable("BEARER_TOKEN", access_token);
      bruno.setEnvironmentVariable("TOKEN_EXPIRY", (now + expires_in * 1000).toString());
      console.log("Fetched new token!");
    } else {
      console.error(`Failed to fetch token: ${response.status} - ${response.body}`);
    }
  } catch (error) {
    console.error("Error fetching token:", error);
  }
})();